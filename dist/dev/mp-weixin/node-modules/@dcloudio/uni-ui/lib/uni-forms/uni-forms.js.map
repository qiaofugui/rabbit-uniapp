{"version":3,"file":"uni-forms.js","sources":["../../../../../../../../node_modules/@dcloudio/uni-ui/lib/uni-forms/uni-forms.vue","../../../../../../../../uniComponent:/RTovVGVtcC91bmlhcHAvcmFiYml0LXVuaWFwcC9ub2RlX21vZHVsZXMvQGRjbG91ZGlvL3VuaS11aS9saWIvdW5pLWZvcm1zL3VuaS1mb3Jtcy52dWU"],"sourcesContent":["<template>\r\n\t<view class=\"uni-forms\">\r\n\t\t<form>\r\n\t\t\t<slot></slot>\r\n\t\t</form>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport Validator from './validate.js';\r\n\timport {\r\n\t\tdeepCopy,\r\n\t\tgetValue,\r\n\t\tisRequiredField,\r\n\t\tsetDataValue,\r\n\t\tgetDataValue,\r\n\t\trealName,\r\n\t\tisRealName,\r\n\t\trawData,\r\n\t\tisEqual\r\n\t} from './utils.js'\r\n\r\n\t// #ifndef VUE3\r\n\t// 后续会慢慢废弃这个方法\r\n\timport Vue from 'vue';\r\n\tVue.prototype.binddata = function(name, value, formName) {\r\n\t\tif (formName) {\r\n\t\t\tthis.$refs[formName].setValue(name, value);\r\n\t\t} else {\r\n\t\t\tlet formVm;\r\n\t\t\tfor (let i in this.$refs) {\r\n\t\t\t\tconst vm = this.$refs[i];\r\n\t\t\t\tif (vm && vm.$options && vm.$options.name === 'uniForms') {\r\n\t\t\t\t\tformVm = vm;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!formVm) return console.error('当前 uni-froms 组件缺少 ref 属性');\r\n\t\t\tformVm.setValue(name, value);\r\n\t\t}\r\n\t};\r\n\t// #endif\r\n\t/**\r\n\t * Forms 表单\r\n\t * @description 由输入框、选择器、单选框、多选框等控件组成，用以收集、校验、提交数据\r\n\t * @tutorial https://ext.dcloud.net.cn/plugin?id=2773\r\n\t * @property {Object} rules\t表单校验规则\r\n\t * @property {String} validateTrigger = [bind|submit|blur]\t校验触发器方式 默认 submit\r\n\t * @value bind\t\t发生变化时触发\r\n\t * @value submit\t提交时触发\r\n\t * @value blur\t  失去焦点时触发\r\n\t * @property {String} labelPosition = [top|left]\tlabel 位置 默认 left\r\n\t * @value top\t\t顶部显示 label\r\n\t * @value left\t左侧显示 label\r\n\t * @property {String} labelWidth\tlabel 宽度，默认 65px\r\n\t * @property {String} labelAlign = [left|center|right]\tlabel 居中方式  默认 left\r\n\t * @value left\t\tlabel 左侧显示\r\n\t * @value center\tlabel 居中\r\n\t * @value right\t\tlabel 右侧对齐\r\n\t * @property {String} errShowType = [undertext|toast|modal]\t校验错误信息提示方式\r\n\t * @value undertext\t错误信息在底部显示\r\n\t * @value toast\t\t\t错误信息toast显示\r\n\t * @value modal\t\t\t错误信息modal显示\r\n\t * @event {Function} submit\t提交时触发\r\n\t * @event {Function} validate\t校验结果发生变化触发\r\n\t */\r\n\texport default {\r\n\t\tname: 'uniForms',\r\n\t\temits: ['validate', 'submit'],\r\n\t\toptions: {\r\n\t\t\tvirtualHost: true\r\n\t\t},\r\n\t\tprops: {\r\n\t\t\t// 即将弃用\r\n\t\t\tvalue: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// vue3 替换 value 属性\r\n\t\t\tmodelValue: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 1.4.0 开始将不支持 v-model ，且废弃 value 和 modelValue\r\n\t\t\tmodel: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// 表单校验规则\r\n\t\t\trules: {\r\n\t\t\t\ttype: Object,\r\n\t\t\t\tdefault () {\r\n\t\t\t\t\treturn {};\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t//校验错误信息提示方式 默认 undertext 取值 [undertext|toast|modal]\r\n\t\t\terrShowType: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'undertext'\r\n\t\t\t},\r\n\t\t\t// 校验触发器方式 默认 bind 取值 [bind|submit]\r\n\t\t\tvalidateTrigger: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'submit'\r\n\t\t\t},\r\n\t\t\t// label 位置，默认 left 取值  top/left\r\n\t\t\tlabelPosition: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'left'\r\n\t\t\t},\r\n\t\t\t// label 宽度\r\n\t\t\tlabelWidth: {\r\n\t\t\t\ttype: [String, Number],\r\n\t\t\t\tdefault: ''\r\n\t\t\t},\r\n\t\t\t// label 居中方式，默认 left 取值 left/center/right\r\n\t\t\tlabelAlign: {\r\n\t\t\t\ttype: String,\r\n\t\t\t\tdefault: 'left'\r\n\t\t\t},\r\n\t\t\tborder: {\r\n\t\t\t\ttype: Boolean,\r\n\t\t\t\tdefault: false\r\n\t\t\t}\r\n\t\t},\r\n\t\tprovide() {\r\n\t\t\treturn {\r\n\t\t\t\tuniForm: this\r\n\t\t\t}\r\n\t\t},\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\t// 表单本地值的记录，不应该与传如的值进行关联\r\n\t\t\t\tformData: {},\r\n\t\t\t\tformRules: {}\r\n\t\t\t};\r\n\t\t},\r\n\t\tcomputed: {\r\n\t\t\t// 计算数据源变化的\r\n\t\t\tlocalData() {\r\n\t\t\t\tconst localVal = this.model || this.modelValue || this.value\r\n\t\t\t\tif (localVal) {\r\n\t\t\t\t\treturn deepCopy(localVal)\r\n\t\t\t\t}\r\n\t\t\t\treturn {}\r\n\t\t\t}\r\n\t\t},\r\n\t\twatch: {\r\n\t\t\t// 监听数据变化 ,暂时不使用，需要单独赋值\r\n\t\t\t// localData: {},\r\n\t\t\t// 监听规则变化\r\n\t\t\trules: {\r\n\t\t\t\thandler: function(val, oldVal) {\r\n\t\t\t\t\tthis.setRules(val)\r\n\t\t\t\t},\r\n\t\t\t\tdeep: true,\r\n\t\t\t\timmediate: true\r\n\t\t\t}\r\n\t\t},\r\n\t\tcreated() {\r\n\t\t\t// #ifdef VUE3\r\n\t\t\tlet getbinddata = getApp().$vm.$.appContext.config.globalProperties.binddata\r\n\t\t\tif (!getbinddata) {\r\n\t\t\t\tgetApp().$vm.$.appContext.config.globalProperties.binddata = function(name, value, formName) {\r\n\t\t\t\t\tif (formName) {\r\n\t\t\t\t\t\tthis.$refs[formName].setValue(name, value);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tlet formVm;\r\n\t\t\t\t\t\tfor (let i in this.$refs) {\r\n\t\t\t\t\t\t\tconst vm = this.$refs[i];\r\n\t\t\t\t\t\t\tif (vm && vm.$options && vm.$options.name === 'uniForms') {\r\n\t\t\t\t\t\t\t\tformVm = vm;\r\n\t\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (!formVm) return console.error('当前 uni-froms 组件缺少 ref 属性');\r\n\t\t\t\t\t\tformVm.setValue(name, value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// #endif\r\n\r\n\t\t\t// 子组件实例数组\r\n\t\t\tthis.childrens = []\n\t\t\t// TODO 兼容旧版 uni-data-picker ,新版本中无效，只是避免报错\n\t\t\tthis.inputChildrens = []\r\n\t\t\tthis.setRules(this.rules)\r\n\t\t},\r\n\t\tmethods: {\r\n\t\t\t/**\r\n\t\t\t * 外部调用方法\r\n\t\t\t * 设置规则 ，主要用于小程序自定义检验规则\r\n\t\t\t * @param {Array} rules 规则源数据\r\n\t\t\t */\r\n\t\t\tsetRules(rules) {\r\n\t\t\t\t// TODO 有可能子组件合并规则的时机比这个要早，所以需要合并对象 ，而不是直接赋值，可能会被覆盖\r\n\t\t\t\tthis.formRules = Object.assign({}, this.formRules, rules)\r\n\t\t\t\t// 初始化校验函数\r\n\t\t\t\tthis.validator = new Validator(rules);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 外部调用方法\r\n\t\t\t * 设置数据，用于设置表单数据，公开给用户使用 ， 不支持在动态表单中使用\r\n\t\t\t * @param {Object} key\r\n\t\t\t * @param {Object} value\r\n\t\t\t */\r\n\t\t\tsetValue(key, value) {\r\n\t\t\t\tlet example = this.childrens.find(child => child.name === key);\r\n\t\t\t\tif (!example) return null;\r\n\t\t\t\tthis.formData[key] = getValue(key, value, (this.formRules[key] && this.formRules[key].rules) || [])\r\n\t\t\t\treturn example.onFieldChange(this.formData[key]);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 外部调用方法\r\n\t\t\t * 手动提交校验表单\r\n\t\t\t * 对整个表单进行校验的方法，参数为一个回调函数。\r\n\t\t\t * @param {Array} keepitem 保留不参与校验的字段\r\n\t\t\t * @param {type} callback 方法回调\r\n\t\t\t */\r\n\t\t\tvalidate(keepitem, callback) {\r\n\t\t\t\treturn this.checkAll(this.formData, keepitem, callback);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 外部调用方法\r\n\t\t\t * 部分表单校验\r\n\t\t\t * @param {Array|String} props 需要校验的字段\r\n\t\t\t * @param {Function} 回调函数\r\n\t\t\t */\r\n\t\t\tvalidateField(props = [], callback) {\r\n\t\t\t\tprops = [].concat(props);\r\n\t\t\t\tlet invalidFields = {};\r\n\t\t\t\tthis.childrens.forEach(item => {\r\n\t\t\t\t\tconst name = realName(item.name)\r\n\t\t\t\t\tif (props.indexOf(name) !== -1) {\r\n\t\t\t\t\t\tinvalidFields = Object.assign({}, invalidFields, {\r\n\t\t\t\t\t\t\t[name]: this.formData[name]\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\treturn this.checkAll(invalidFields, [], callback);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 外部调用方法\r\n\t\t\t * 移除表单项的校验结果。传入待移除的表单项的 prop 属性或者 prop 组成的数组，如不传则移除整个表单的校验结果\r\n\t\t\t * @param {Array|String} props 需要移除校验的字段 ，不填为所有\r\n\t\t\t */\r\n\t\t\tclearValidate(props = []) {\r\n\t\t\t\tprops = [].concat(props);\r\n\t\t\t\tthis.childrens.forEach(item => {\r\n\t\t\t\t\tif (props.length === 0) {\r\n\t\t\t\t\t\titem.errMsg = '';\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tconst name = realName(item.name)\r\n\t\t\t\t\t\tif (props.indexOf(name) !== -1) {\r\n\t\t\t\t\t\t\titem.errMsg = '';\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 外部调用方法 ，即将废弃\r\n\t\t\t * 手动提交校验表单\r\n\t\t\t * 对整个表单进行校验的方法，参数为一个回调函数。\r\n\t\t\t * @param {Array} keepitem 保留不参与校验的字段\r\n\t\t\t * @param {type} callback 方法回调\r\n\t\t\t */\r\n\t\t\tsubmit(keepitem, callback, type) {\r\n\t\t\t\tfor (let i in this.dataValue) {\r\n\t\t\t\t\tconst itemData = this.childrens.find(v => v.name === i);\r\n\t\t\t\t\tif (itemData) {\r\n\t\t\t\t\t\tif (this.formData[i] === undefined) {\r\n\t\t\t\t\t\t\tthis.formData[i] = this._getValue(i, this.dataValue[i]);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!type) {\r\n\t\t\t\t\tconsole.warn('submit 方法即将废弃，请使用validate方法代替！');\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn this.checkAll(this.formData, keepitem, callback, 'submit');\r\n\t\t\t},\r\n\r\n\t\t\t// 校验所有\r\n\t\t\tasync checkAll(invalidFields, keepitem, callback, type) {\r\n\t\t\t\t// 不存在校验规则 ，则停止校验流程\r\n\t\t\t\tif (!this.validator) return\r\n\t\t\t\tlet childrens = []\r\n\t\t\t\t// 处理参与校验的item实例\r\n\t\t\t\tfor (let i in invalidFields) {\r\n\t\t\t\t\tconst item = this.childrens.find(v => realName(v.name) === i)\r\n\t\t\t\t\tif (item) {\r\n\t\t\t\t\t\tchildrens.push(item)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 如果validate第一个参数是funciont ,那就走回调\r\n\t\t\t\tif (!callback && typeof keepitem === 'function') {\r\n\t\t\t\t\tcallback = keepitem;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet promise;\r\n\t\t\t\t// 如果不存在回调，那么使用 Promise 方式返回\r\n\t\t\t\tif (!callback && typeof callback !== 'function' && Promise) {\r\n\t\t\t\t\tpromise = new Promise((resolve, reject) => {\r\n\t\t\t\t\t\tcallback = function(valid, invalidFields) {\r\n\t\t\t\t\t\t\t!valid ? resolve(invalidFields) : reject(valid);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet results = [];\r\n\t\t\t\t// 避免引用错乱 ，建议拷贝对象处理\r\n\t\t\t\tlet tempFormData = JSON.parse(JSON.stringify(invalidFields))\r\n\t\t\t\t// 所有子组件参与校验,使用 for 可以使用  awiat\r\n\t\t\t\tfor (let i in childrens) {\r\n\t\t\t\t\tconst child = childrens[i]\r\n\t\t\t\t\tlet name = realName(child.name);\r\n\t\t\t\t\tconst result = await child.onFieldChange(tempFormData[name]);\r\n\t\t\t\t\tif (result) {\r\n\t\t\t\t\t\tresults.push(result);\r\n\t\t\t\t\t\t// toast ,modal 只需要执行第一次就可以\r\n\t\t\t\t\t\tif (this.errShowType === 'toast' || this.errShowType === 'modal') break;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif (Array.isArray(results)) {\r\n\t\t\t\t\tif (results.length === 0) results = null;\r\n\t\t\t\t}\r\n\t\t\t\tif (Array.isArray(keepitem)) {\r\n\t\t\t\t\tkeepitem.forEach(v => {\r\n\t\t\t\t\t\tlet vName = realName(v);\r\n\t\t\t\t\t\tlet value = getDataValue(v, this.localData)\r\n\t\t\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t\t\ttempFormData[vName] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// TODO submit 即将废弃\r\n\t\t\t\tif (type === 'submit') {\r\n\t\t\t\t\tthis.$emit('submit', {\r\n\t\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\t\tvalue: tempFormData,\r\n\t\t\t\t\t\t\terrors: results\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.$emit('validate', results);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// const resetFormData = rawData(tempFormData, this.localData, this.name)\r\n\t\t\t\tlet resetFormData = {}\r\n\t\t\t\tresetFormData = rawData(tempFormData, this.name)\r\n\t\t\t\tcallback && typeof callback === 'function' && callback(results, resetFormData);\r\n\r\n\t\t\t\tif (promise && callback) {\r\n\t\t\t\t\treturn promise;\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn null;\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * 返回validate事件\r\n\t\t\t * @param {Object} result\r\n\t\t\t */\r\n\t\t\tvalidateCheck(result) {\r\n\t\t\t\tthis.$emit('validate', result);\r\n\t\t\t},\r\n\t\t\t_getValue: getValue,\r\n\t\t\t_isRequiredField: isRequiredField,\r\n\t\t\t_setDataValue: setDataValue,\r\n\t\t\t_getDataValue: getDataValue,\r\n\t\t\t_realName: realName,\r\n\t\t\t_isRealName: isRealName,\r\n\t\t\t_isEqual: isEqual\r\n\t\t}\r\n\t};\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\t.uni-forms {}\r\n</style>\n","import Component from 'E:/Temp/uniapp/rabbit-uniapp/node_modules/@dcloudio/uni-ui/lib/uni-forms/uni-forms.vue'\nwx.createComponent(Component)"],"names":["deepCopy","Validator","getValue","realName","invalidFields","getDataValue","rawData","isRequiredField","setDataValue","isRealName","isEqual"],"mappings":"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","x_google_ignoreList":[0]}
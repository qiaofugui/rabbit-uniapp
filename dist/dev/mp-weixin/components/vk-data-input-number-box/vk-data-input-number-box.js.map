{"version":3,"file":"vk-data-input-number-box.js","sources":["../../../../../src/components/vk-data-input-number-box/vk-data-input-number-box.vue","../../../../../uniComponent:/RTovVGVtcC91bmlhcHAvcmFiYml0LXVuaWFwcC9zcmMvY29tcG9uZW50cy92ay1kYXRhLWlucHV0LW51bWJlci1ib3gvdmstZGF0YS1pbnB1dC1udW1iZXItYm94LnZ1ZQ"],"sourcesContent":["<!-- 步进器 -->\n<template>\n  <view class=\"vk-data-input-number-box\">\n    <view\n      class=\"u-icon-minus\"\n      :class=\"{ 'u-icon-disabled': disabled || inputVal <= min }\"\n      :style=\"{\n        background: bgColor,\n        height: inputHeight + 'rpx',\n        color: color,\n        fontSize: size + 'rpx',\n        minHeight: '1.4em',\n      }\"\n      @touchstart.prevent=\"btnTouchStart('minus')\"\n      @touchend.stop.prevent=\"clearTimer\"\n    >\n      <view :style=\"'font-size:' + (Number(size) + 10) + 'rpx'\" class=\"num-btn\">－</view>\n    </view>\n    <input\n      v-model=\"inputVal\"\n      :disabled=\"disabledInput || disabled\"\n      :cursor-spacing=\"getCursorSpacing\"\n      :class=\"{ 'u-input-disabled': disabled }\"\n      class=\"u-number-input\"\n      type=\"number\"\n      :style=\"{\n        color: color,\n        fontSize: size + 'rpx',\n        background: bgColor,\n        height: inputHeight + 'rpx',\n        width: inputWidth + 'rpx',\n      }\"\n      @blur=\"onBlur\"\n    />\n    <view\n      class=\"u-icon-plus\"\n      :class=\"{ 'u-icon-disabled': disabled || inputVal >= max }\"\n      :style=\"{\n        background: bgColor,\n        height: inputHeight + 'rpx',\n        color: color,\n        fontSize: size + 'rpx',\n        minHeight: '1.4em',\n      }\"\n      @touchstart.prevent=\"btnTouchStart('plus')\"\n      @touchend.stop.prevent=\"clearTimer\"\n    >\n      <view :style=\"'font-size:' + (Number(size) + 10) + 'rpx'\" class=\"num-btn\">＋</view>\n    </view>\n  </view>\n</template>\n\n<script>\n/* eslint-disable */\n/**\n * numberBox 步进器（此为uview组件改造）\n * @description 该组件一般用于商城购物选择物品数量的场景。注意：该输入框只能输入大于或等于0的整数，不支持小数输入\n * @tutorial https://www.uviewui.com/components/numberBox.html\n * @property {Number} value 输入框初始值（默认1）\n * @property {String} bg-color 输入框和按钮的背景颜色（默认#F2F3F5）\n * @property {Number} min 用户可输入的最小值（默认0）\n * @property {Number} max 用户可输入的最大值（默认99999）\n * @property {Number} step 步长，每次加或减的值（默认1）\n * @property {Number} stepFirst 步进值，首次增加或最后减的值(默认step值和一致）\n * @property {Boolean} disabled 是否禁用操作，禁用后无法加减或手动修改输入框的值（默认false）\n * @property {Boolean} disabled-input 是否禁止输入框手动输入值（默认false）\n * @property {Boolean} positive-integer 是否只能输入正整数（默认true）\n * @property {String | Number} size 输入框文字和按钮字体大小，单位rpx（默认26）\n * @property {String} color 输入框文字和加减按钮图标的颜色（默认#323233）\n * @property {String | Number} input-width 输入框宽度，单位rpx（默认80）\n * @property {String | Number} input-height 输入框和按钮的高度，单位rpx（默认50）\n * @property {String | Number} index 事件回调时用以区分当前发生变化的是哪个输入框\n * @property {Boolean} long-press 是否开启长按连续递增或递减(默认true)\n * @property {String | Number} press-time 开启长按触发后，每触发一次需要多久，单位ms(默认250)\n * @property {String | Number} cursor-spacing 指定光标于键盘的距离，避免键盘遮挡输入框，单位rpx（默认200）\n * @event {Function} change 输入框内容发生变化时触发，对象形式\n * @event {Function} blur 输入框失去焦点时触发，对象形式\n * @event {Function} minus 点击减少按钮时触发(按钮可点击情况下)，对象形式\n * @event {Function} plus 点击增加按钮时触发(按钮可点击情况下)，对象形式\n * @example <vk-data-input-number-box :min=\"1\" :max=\"100\"></vk-data-input-number-box>\n */\nexport default {\n  name: 'vk-data-input-number-box',\n  emits: ['update:modelValue', 'input', 'change', 'blur', 'plus', 'minus'],\n  props: {\n    // 预显示的数字\n    value: {\n      type: Number,\n      default: 1,\n    },\n    modelValue: {\n      type: Number,\n      default: 1,\n    },\n    // 背景颜色\n    bgColor: {\n      type: String,\n      default: '#F2F3F5',\n    },\n    // 最小值\n    min: {\n      type: Number,\n      default: 0,\n    },\n    // 最大值\n    max: {\n      type: Number,\n      default: 99999,\n    },\n    // 步进值，每次加或减的值\n    step: {\n      type: Number,\n      default: 1,\n    },\n    // 步进值，首次增加或最后减的值\n    stepFirst: {\n      type: Number,\n      default: 0,\n    },\n    // 是否只能输入 step 的倍数\n    stepStrictly: {\n      type: Boolean,\n      default: false,\n    },\n    // 是否禁用加减操作\n    disabled: {\n      type: Boolean,\n      default: false,\n    },\n    // input的字体大小，单位rpx\n    size: {\n      type: [Number, String],\n      default: 26,\n    },\n    // 加减图标的颜色\n    color: {\n      type: String,\n      default: '#323233',\n    },\n    // input宽度，单位rpx\n    inputWidth: {\n      type: [Number, String],\n      default: 80,\n    },\n    // input高度，单位rpx\n    inputHeight: {\n      type: [Number, String],\n      default: 50,\n    },\n    // index索引，用于列表中使用，让用户知道是哪个numberbox发生了变化，一般使用for循环出来的index值即可\n    index: {\n      type: [Number, String],\n      default: '',\n    },\n    // 是否禁用输入框，与disabled作用于输入框时，为OR的关系，即想要禁用输入框，又可以加减的话\n    // 设置disabled为false，disabledInput为true即可\n    disabledInput: {\n      type: Boolean,\n      default: false,\n    },\n    // 输入框于键盘之间的距离\n    cursorSpacing: {\n      type: [Number, String],\n      default: 100,\n    },\n    // 是否开启长按连续递增或递减\n    longPress: {\n      type: Boolean,\n      default: true,\n    },\n    // 开启长按触发后，每触发一次需要多久\n    pressTime: {\n      type: [Number, String],\n      default: 250,\n    },\n    // 是否只能输入大于或等于0的整数(正整数)\n    positiveInteger: {\n      type: Boolean,\n      default: true,\n    },\n  },\n  watch: {\n    valueCom(v1, v2) {\n      // 只有value的改变是来自外部的时候，才去同步inputVal的值，否则会造成循环错误\n      if (!this.changeFromInner) {\n        this.inputVal = v1\n        // 因为inputVal变化后，会触发this.handleChange()，在其中changeFromInner会再次被设置为true，\n        // 造成外面修改值，也导致被认为是内部修改的混乱，这里进行this.$nextTick延时，保证在运行周期的最后处\n        // 将changeFromInner设置为false\n        this.$nextTick(function () {\n          this.changeFromInner = false\n        })\n      }\n    },\n    inputVal(v1, v2) {\n      // 为了让用户能够删除所有输入值，重新输入内容，删除所有值后，内容为空字符串\n      if (v1 == '') return\n      let value = 0\n      // 首先判断是否数值，并且在min和max之间，如果不是，使用原来值\n      let tmp = this.isNumber(v1)\n      if (tmp && v1 >= this.min && v1 <= this.max) value = v1\n      else value = v2\n      // 判断是否只能输入大于等于0的整数\n      if (this.positiveInteger) {\n        // 小于0，或者带有小数点，\n        if (v1 < 0 || String(v1).indexOf('.') !== -1) {\n          value = v2\n          // 双向绑定input的值，必须要使用$nextTick修改显示的值\n          this.$nextTick(() => {\n            this.inputVal = v2\n          })\n        }\n      }\n      // 发出change事件\n      this.handleChange(value, 'change')\n    },\n    min(v1) {\n      if (v1 !== undefined && v1 != '' && this.valueCom < v1) {\n        this.$emit('input', v1)\n        this.$emit('update:modelValue', v1)\n      }\n    },\n    max(v1) {\n      if (v1 !== undefined && v1 != '' && this.valueCom > v1) {\n        this.$emit('input', v1)\n        this.$emit('update:modelValue', v1)\n      }\n    },\n  },\n  data() {\n    return {\n      inputVal: 1, // 输入框中的值，不能直接使用props中的value，因为应该改变props的状态\n      timer: null, // 用作长按的定时器\n      changeFromInner: false, // 值发生变化，是来自内部还是外部\n      innerChangeTimer: null, // 内部定时器\n    }\n  },\n  created() {\n    this.inputVal = Number(this.valueCom)\n  },\n  computed: {\n    valueCom() {\n      // #ifndef VUE3\n      return this.value\n      // #endif\n\n      // #ifdef VUE3\n      return this.modelValue\n      // #endif\n    },\n    getCursorSpacing() {\n      // 先将值转为px单位，再转为数值\n      return Number(uni.upx2px(this.cursorSpacing))\n    },\n  },\n  methods: {\n    // 点击退格键\n    btnTouchStart(callback) {\n      // 先执行一遍方法，否则会造成松开手时，就执行了clearTimer，导致无法实现功能\n      this[callback]()\n      // 如果没开启长按功能，直接返回\n      if (!this.longPress) return\n      clearInterval(this.timer) //再次清空定时器，防止重复注册定时器\n      this.timer = null\n      this.timer = setInterval(() => {\n        // 执行加或减函数\n        this[callback]()\n      }, this.pressTime)\n    },\n    clearTimer() {\n      this.$nextTick(() => {\n        clearInterval(this.timer)\n        this.timer = null\n      })\n    },\n    minus() {\n      this.computeVal('minus')\n    },\n    plus() {\n      this.computeVal('plus')\n    },\n    // 为了保证小数相加减出现精度溢出的问题\n    calcPlus(num1, num2) {\n      let baseNum, baseNum1, baseNum2\n      try {\n        baseNum1 = num1.toString().split('.')[1].length\n      } catch (e) {\n        baseNum1 = 0\n      }\n      try {\n        baseNum2 = num2.toString().split('.')[1].length\n      } catch (e) {\n        baseNum2 = 0\n      }\n      baseNum = Math.pow(10, Math.max(baseNum1, baseNum2))\n      let precision = baseNum1 >= baseNum2 ? baseNum1 : baseNum2 //精度\n      return ((num1 * baseNum + num2 * baseNum) / baseNum).toFixed(precision)\n    },\n    // 为了保证小数相加减出现精度溢出的问题\n    calcMinus(num1, num2) {\n      let baseNum, baseNum1, baseNum2\n      try {\n        baseNum1 = num1.toString().split('.')[1].length\n      } catch (e) {\n        baseNum1 = 0\n      }\n      try {\n        baseNum2 = num2.toString().split('.')[1].length\n      } catch (e) {\n        baseNum2 = 0\n      }\n      baseNum = Math.pow(10, Math.max(baseNum1, baseNum2))\n      let precision = baseNum1 >= baseNum2 ? baseNum1 : baseNum2\n      return ((num1 * baseNum - num2 * baseNum) / baseNum).toFixed(precision)\n    },\n    computeVal(type) {\n      uni.hideKeyboard()\n      if (this.disabled) return\n      let value = 0\n      // 新增stepFirst开始\n      // 减\n      if (type === 'minus') {\n        if (this.stepFirst > 0 && this.inputVal == this.stepFirst) {\n          value = this.min\n        } else {\n          value = this.calcMinus(this.inputVal, this.step)\n        }\n      } else if (type === 'plus') {\n        if (this.stepFirst > 0 && this.inputVal < this.stepFirst) {\n          value = this.stepFirst\n        } else {\n          value = this.calcPlus(this.inputVal, this.step)\n        }\n      }\n      if (this.stepStrictly) {\n        let strictly = value % this.step\n        if (strictly > 0) {\n          value -= strictly\n        }\n      }\n      if (value > this.max) {\n        value = this.max\n      } else if (value < this.min) {\n        value = this.min\n      }\n      // 新增stepFirst结束\n      this.inputVal = value\n      this.handleChange(value, type)\n    },\n    // 处理用户手动输入的情况\n    onBlur(event) {\n      let val = 0\n      let value = event.detail.value\n      // 如果为非0-9数字组成，或者其第一位数值为0，直接让其等于min值\n      // 这里不直接判断是否正整数，是因为用户传递的props min值可能为0\n      if (!/(^\\d+$)/.test(value) || value[0] == 0) val = this.min\n      val = +value\n\n      // 新增stepFirst开始\n      if (this.stepFirst > 0 && this.inputVal < this.stepFirst && this.inputVal > 0) {\n        val = this.stepFirst\n      }\n      // 新增stepFirst结束\n      if (this.stepStrictly) {\n        let strictly = val % this.step\n        if (strictly > 0) {\n          val -= strictly\n        }\n      }\n      if (val > this.max) {\n        val = this.max\n      } else if (val < this.min) {\n        val = this.min\n      }\n      this.$nextTick(() => {\n        this.inputVal = val\n      })\n      this.handleChange(val, 'blur')\n    },\n    handleChange(value, type) {\n      if (this.disabled) return\n      // 清除定时器，避免造成混乱\n      if (this.innerChangeTimer) {\n        clearTimeout(this.innerChangeTimer)\n        this.innerChangeTimer = null\n      }\n      // 发出input事件，修改通过v-model绑定的值，达到双向绑定的效果\n      this.changeFromInner = true\n      // 一定时间内，清除changeFromInner标记，否则内部值改变后\n      // 外部通过程序修改value值，将会无效\n      this.innerChangeTimer = setTimeout(() => {\n        this.changeFromInner = false\n      }, 150)\n      this.$emit('input', Number(value))\n      this.$emit('update:modelValue', Number(value))\n      this.$emit(type, {\n        // 转为Number类型\n        value: Number(value),\n        index: this.index,\n      })\n    },\n    /**\n     * 验证十进制数字\n     */\n    isNumber(value) {\n      return /^(?:-?\\d+|-?\\d{1,3}(?:,\\d{3})+)?(?:\\.\\d+)?$/.test(value)\n    },\n  },\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.vk-data-input-number-box {\n  display: inline-flex;\n  align-items: center;\n}\n\n.u-number-input {\n  position: relative;\n  text-align: center;\n  padding: 0;\n  margin: 0 6rpx;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.u-icon-plus,\n.u-icon-minus {\n  width: 60rpx;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.u-icon-plus {\n  border-radius: 0 8rpx 8rpx 0;\n}\n\n.u-icon-minus {\n  border-radius: 8rpx 0 0 8rpx;\n}\n\n.u-icon-disabled {\n  color: #c8c9cc !important;\n  background: #f7f8fa !important;\n}\n\n.u-input-disabled {\n  color: #c8c9cc !important;\n  background-color: #f2f3f5 !important;\n}\n.num-btn {\n  font-weight: 550;\n  position: relative;\n  top: -4rpx;\n}\n</style>\n","import Component from 'E:/Temp/uniapp/rabbit-uniapp/src/components/vk-data-input-number-box/vk-data-input-number-box.vue'\nwx.createComponent(Component)"],"names":["uni"],"mappings":"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"}